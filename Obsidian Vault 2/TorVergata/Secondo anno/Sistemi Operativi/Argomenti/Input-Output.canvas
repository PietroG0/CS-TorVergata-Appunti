{
	"nodes":[
		{"id":"11bff4e67323899b","x":-125,"y":-30,"width":105,"height":60,"type":"text","text":"I/O"},
		{"id":"76584b3f39e45d84","x":-72,"y":120,"width":500,"height":480,"color":"4","type":"text","text":"DMA (Direct Memory Access)\nA prescindere se la CPU abbia o meno l'I/O mappato in memoria, deve poter comunicare con il controller dei dispositivi per scambiare dati.\nIn questo caso è comune avere una DMA, che ha accesso al bus di sistema indipendentemente dalla CPU. Contiene alcuni registri che possono essere letti o scritti dalla CPU, tra cui un registro degli indirizzi di memoria, un registro dei conteggi dei byte e uno o più registri di controllo.\nPer prima cosa la CPU programma la DMA, impostandone i registri in modo che conosca cosa trasferire e dove. \nIl controller DMA inizia il trasferimento inviando una richiesta di lettura del disco sul bus di sistema verso il controller del disco, a cui non importa da dove proviene questa richiesta.\nL'operazione di scrittura in memoria è un altro ciclo di bus standard. \nQuando l'operazione è stata completata, il controller del disco invia, attraverso il bus di sistema, un segnale al DMA."},
		{"id":"f196f109d2b890c8","x":-612,"y":120,"width":540,"height":544,"color":"1","type":"text","text":"Controller e I/O mappato in memoria\nLa componente elettronica dei dispositivi I/O è detta controller del dispositivo o adattatore.\nOgni controller dispone di alcuni registri usati per la comunicazione con la CPU, scrivendo in questi registri, il sistema operativo può ordinare al dispositivo di inviare dati, accettarli, eliminarli ecc..\nLeggendo da questi registri, il sistema operativo riesce a capire se il dispositivo è pronto per accettare un altro comando e così via.\nOltre ai registri di controllo, molti dispositivi hanno un buffer di dati su cui il sistema operativo può leggere e scrivere.\nLa questione che sorge è come la CPU riesce a comunicare con i registri di controllo e con il buffer; esistono due alternative, nella prima, a ciascun registro di controllo è affidata un numero di porta I/O, un intero a 8 o 16 bit. L'insieme di tutte le porte forma lo spazio delle porte I/O, protetto in modo che gli altri programmi non possano accedervi, solo il sistema operativo.\nIl secondo approccio, è quello di mappare tutti i registr di controllo nello spazio della memoria, a ciascun registro di controllo è assegnato un indirizzo di memoria univoco a cui non è assegnata memoria. Questo metodo è definito come I/O mappato in memoria"}
	],
	"edges":[
		{"id":"b56d0262967a13f5","fromNode":"11bff4e67323899b","fromSide":"bottom","toNode":"f196f109d2b890c8","toSide":"top"},
		{"id":"3983da82601c79be","fromNode":"11bff4e67323899b","fromSide":"bottom","toNode":"76584b3f39e45d84","toSide":"top"}
	]
}