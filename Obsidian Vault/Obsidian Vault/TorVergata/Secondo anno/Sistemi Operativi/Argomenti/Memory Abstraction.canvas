{
	"nodes":[
		{"id":"82fddbdbbe909191","type":"text","text":"Gestione della Memoria","x":-151,"y":0,"width":250,"height":80},
		{"id":"30ed65e6923bc7a7","type":"text","text":"Memory Abstraction","x":-152,"y":193,"width":250,"height":60},
		{"id":"0415fe04cacb9e57","type":"text","text":"Nessuna Astrazione","x":-663,"y":400,"width":250,"height":60,"color":"1"},
		{"id":"84d52ccb6e2f6b66","type":"text","text":"Problema Principale:\n- I programmi utilizzano indirizzi assoluti di memoria fisica, portando a conflitti durante l'esecuzione\n- La mancanza di astrazione dell'indirizzo può causare il crash dei programmi","x":-720,"y":1191,"width":364,"height":229,"color":"1"},
		{"id":"f6782928a5305f67","type":"text","text":"Monoprogrammazione\n- Tre modelli principali \n1) OS in RAM, utilizzato sui mainframe e minicomputer\n2) OS in ROM (sistemi embedded)\n3) OS+drivers in ROM+RAM, primi personal computer (MS-DOS)\n\n","x":-997,"y":631,"width":459,"height":300,"color":"1"},
		{"id":"574760121e4c1117","type":"text","text":"Concetto di Spazio degli Indirizzi\n- Ogni programma ha un insieme unico di indirizzi (spazio degli indirizzi) che può usare per indirizzare la memoria\n- Questo spazio è indipendente da altri processi e rappresenta una forma di memoria astratta","x":741,"y":883,"width":319,"height":277,"color":"4"},
		{"id":"2508e55cd5572c42","type":"text","text":"Implementazione con registri base e limite\n- Vecchia soluzione: mappare lo spazio degli indirizzi di ogni processo in parti diveerse dalla memoria fisica\n- Registri Base e Limite: Due registri hardware speciali presenti in molte CPU\n- Registro Base: contiene l'indirizzo fisico di inizio di un programma in memoria\n- Registro Limite: contiene la lunghezza del programma\n- Gli indirizzi generati dei programmi vengono aggiustati automaticamente aggiungendo il valore del registro base","x":289,"y":883,"width":361,"height":437,"color":"4"},
		{"id":"231465f4a476f9a3","type":"text","text":"Address Spaces\n- Il registro di base mette in atto la rilocazione dinamica\n- Il registro limite applica la protezione\n\n![[Pasted image 20231115113932.png]]","x":1202,"y":736,"width":318,"height":584,"color":"4"},
		{"id":"b69ee3540f1528f7","type":"text","text":"Strategie per gestire il sovraccarico di memoria","x":354,"y":-364,"width":250,"height":101,"color":"6"},
		{"id":"c06aef94467b611c","type":"text","text":"Memoria Virtuale:\n- Permette l'esecuzione dei programmi anche se solo parzialmente presenti nella memoria principale","x":479,"y":-693,"width":250,"height":196,"color":"6"},
		{"id":"95b961a7d4d328e0","type":"text","text":"Swapping\n- Sposta interi processi tra Ram e disco\n- Processi inattivi archiviati su memoria non volatile","x":197,"y":-693,"width":282,"height":196,"color":"6"},
		{"id":"23721a81e4f8f932","type":"text","text":"![[Pasted image 20231115114636.png]]","x":-450,"y":-1060,"width":370,"height":220,"color":"6"},
		{"id":"f73a93638d3caff6","type":"text","text":"Gestione dinamica della memoria\n- Obiettivo: Tenere traccia dell'utilizzo della memoria\n- Metodi principali:\n1) Bitmap tiene traccia di quali blocchi vengono allocati\n2) Una lista collegata tiene traccia della memoria non allocata\n- Importanza: Questo tracciamento non riguarda solo la memoria, ma anche risorse come i file system","x":-1080,"y":-164,"width":407,"height":387,"color":"5"},
		{"id":"e5abc368814fa297","type":"text","text":"![[Pasted image 20231115115415.png]]","x":-1874,"y":-84,"width":628,"height":205,"color":"5"},
		{"id":"f64102aad3b06739","type":"text","text":"Memory Management e Linked List\nNella pratica viene usata una doppia linked list, rende più facile gestire lo spazio libero\n- Può controllare facilmente se il precedente spazio è libero\n- Può regolare facilmente i puntatori","x":-1586,"y":200,"width":335,"height":260,"color":"5"},
		{"id":"517958e3c94d580e","type":"text","text":"Schemi di allocazione della memoria\n- First Fit: Seleziona il primo spazio disponibile\n- Next Fit: Seleziona il successivo spazio disponibile\n- Best Fit: Spazio più adeguato\n- Worst Fit: Spazio meno adeguato\n- Quick Fit: Mantiene spazi di dimensioni diverse (le più richieste)\n- Buddy Allocation (Linux): Migliora la performance di coalescenza del Quick","x":-1653,"y":631,"width":469,"height":300,"color":"5"},
		{"id":"25aaf12c89a00c82","type":"text","text":"Astrazione della Memoria e spazi degli indirizzi\n- Problema: L'accesso diretto alla memoria fisica da parte dei programmi può causare problemi come la distruzione del sistema operativo e la difficoltà di esecuzione simultanea di più programmi\n- Soluzione: Astrazione della memoria per separare e proteggere i programmi in esecuzione","x":470,"y":393,"width":431,"height":238,"color":"4"},
		{"id":"1669365478ed8feb","type":"text","text":"Out of Memory\n- Uccidere il processo\n- Trasferire il processo\n- Swapping","x":-980,"y":-465,"width":330,"height":202,"color":"6"},
		{"id":"443aff88f8928331","type":"text","text":"Bitmaps vs Linked Lists\n- Bitmap: trovare i fori richiede una scansione (lenta)\n- Lista: liste di processi/\"buchi\"\n- Allocazione lenta contro deallocazione lenta\n- Buchi ordinati per indirizzo per una rapida coalescenza","x":-1746,"y":-603,"width":373,"height":303,"color":"5"},
		{"id":"ce74ea584da2571c","type":"text","text":"Dynamic Partitions and Swapping\n- Lo scambio può portare alla frammentazione della memoria\n- Necessaria compattazione della memoria (lenta)","x":-420,"y":-703,"width":309,"height":206,"color":"6"},
		{"id":"28a6966d58a42eef","type":"text","text":"Gestione dello spazio e crescita dei processi\n- Sfida: gestire processi con segmenti di dati in crescita\n- Memory Compaction: sposta processi per liberare spazio, ma richiede tempo \n- Soluzione: allocare memoria extra durante lo swapping o lo spostamento dei processi\n\n","x":-1020,"y":-874,"width":410,"height":377,"color":"6"},
		{"id":"0e0f667ea1696467","type":"text","text":"Funzionamento e limiti dei registri\nOgni riferimento alla memoria da parte di un programma:\n- Aggiunge il valore del registro base all'indirizzo generato\n- Confronta con il registro limite per assicurare che l'accesso sia entro i limiti consentiti\nVantaggi\n- Offre a ogni processo uno spazio degli indirizzi separato e protetto\n\nSvantaggi\n- Necessità di eseguire somme e confronti ad ogni accesso alla memoria, il che può essere letto\nAl momento dell’esecuzione di un processo, nel registro base viene caricato l’indirizzo fisico dove comincia il suo programma in memoria e nel registro limite viene caricata la lunghezza del programma..","x":220,"y":1460,"width":500,"height":680,"color":"4"},
		{"id":"fd506beedb301d3b","type":"text","text":"Multiprogrammazione\n- Possibilità di eseguire più programmi contemporaneamente senza astrazione della memoria usando lo swapping\n- Swapping: Salvataggio del contenuto della memoria in un file su memoria non volatile e prelievo del programma successivo\n- Naive Approach: Caricamento di più programmi in memoria fisica consecutivamente, senza astrazione dell'indirizzo","x":-538,"y":631,"width":511,"height":300,"color":"1"}
	],
	"edges":[
		{"id":"ed71c2206aa8ad8b","fromNode":"82fddbdbbe909191","fromSide":"bottom","toNode":"30ed65e6923bc7a7","toSide":"top"},
		{"id":"a6158f5004ddbf2d","fromNode":"30ed65e6923bc7a7","fromSide":"bottom","toNode":"0415fe04cacb9e57","toSide":"top"},
		{"id":"6cc950275365ab9a","fromNode":"0415fe04cacb9e57","fromSide":"bottom","toNode":"f6782928a5305f67","toSide":"top"},
		{"id":"8c0b7bbec58cf230","fromNode":"0415fe04cacb9e57","fromSide":"bottom","toNode":"fd506beedb301d3b","toSide":"top"},
		{"id":"cfc23449a30dbfd8","fromNode":"fd506beedb301d3b","fromSide":"bottom","toNode":"84d52ccb6e2f6b66","toSide":"top"},
		{"id":"fb5d47221f14c09f","fromNode":"f6782928a5305f67","fromSide":"bottom","toNode":"84d52ccb6e2f6b66","toSide":"top"},
		{"id":"171421ffb41e4743","fromNode":"30ed65e6923bc7a7","fromSide":"bottom","toNode":"25aaf12c89a00c82","toSide":"top"},
		{"id":"9ca24aaa97e53875","fromNode":"25aaf12c89a00c82","fromSide":"bottom","toNode":"574760121e4c1117","toSide":"top"},
		{"id":"c58a4bafac8865a8","fromNode":"25aaf12c89a00c82","fromSide":"bottom","toNode":"2508e55cd5572c42","toSide":"top"},
		{"id":"05002883980d09fc","fromNode":"574760121e4c1117","fromSide":"right","toNode":"231465f4a476f9a3","toSide":"left"},
		{"id":"b1140494a09b1a3d","fromNode":"2508e55cd5572c42","fromSide":"bottom","toNode":"0e0f667ea1696467","toSide":"top"},
		{"id":"5e1bef0d9c9c1c6e","fromNode":"82fddbdbbe909191","fromSide":"right","toNode":"b69ee3540f1528f7","toSide":"left"},
		{"id":"28d8f8fa5feee133","fromNode":"b69ee3540f1528f7","fromSide":"top","toNode":"95b961a7d4d328e0","toSide":"bottom"},
		{"id":"b38bf03bfd414000","fromNode":"b69ee3540f1528f7","fromSide":"top","toNode":"c06aef94467b611c","toSide":"bottom"},
		{"id":"38065eac3530a3a6","fromNode":"95b961a7d4d328e0","fromSide":"left","toNode":"ce74ea584da2571c","toSide":"right"},
		{"id":"3d7bbb8a95e6196b","fromNode":"ce74ea584da2571c","fromSide":"top","toNode":"23721a81e4f8f932","toSide":"bottom"},
		{"id":"ff82f316b24dd5af","fromNode":"82fddbdbbe909191","fromSide":"left","toNode":"28a6966d58a42eef","toSide":"right"},
		{"id":"1867701e99e33237","fromNode":"ce74ea584da2571c","fromSide":"left","toNode":"28a6966d58a42eef","toSide":"right"},
		{"id":"f4f9541d1f053448","fromNode":"28a6966d58a42eef","fromSide":"bottom","toNode":"1669365478ed8feb","toSide":"top"},
		{"id":"bcce863a41c959bd","fromNode":"82fddbdbbe909191","fromSide":"left","toNode":"f73a93638d3caff6","toSide":"right"},
		{"id":"a81e23af4e335ef1","fromNode":"f73a93638d3caff6","fromSide":"left","toNode":"443aff88f8928331","toSide":"right"},
		{"id":"2d6cea3b79e41c89","fromNode":"443aff88f8928331","fromSide":"bottom","toNode":"e5abc368814fa297","toSide":"top"},
		{"id":"03ffbb362e869a74","fromNode":"f73a93638d3caff6","fromSide":"left","toNode":"f64102aad3b06739","toSide":"right"},
		{"id":"b6879b05ba064376","fromNode":"f73a93638d3caff6","fromSide":"bottom","toNode":"517958e3c94d580e","toSide":"top"},
		{"id":"a7fe38dc4e839e84","fromNode":"f64102aad3b06739","fromSide":"bottom","toNode":"517958e3c94d580e","toSide":"top"}
	]
}